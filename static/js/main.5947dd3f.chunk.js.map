{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["ReactGA","initialize","process","App","useState","clientId","setClientId","fingerprint","setFingerprint","useEffect","ga","tracker","get","FingerprintJS","load","then","fp","result","visitorId","catch","err","window","alert","message","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,MAA0B,iC,eCQzCA,IAAQC,WAAWC,IAkCJC,MAhCf,WACE,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,qBAAtC,mBAAOG,EAAP,KAAoBC,EAApB,KAeA,OAdAC,qBAAU,WACRT,IAAQU,IAAG,SAAUC,GACnBL,EAAYK,EAAQC,IAAI,gBAE1BC,IAAcC,OACXC,MAAK,SAACC,GACL,OAAOA,EAAGJ,MAAMG,MAAK,SAACE,GACpBT,EAAeS,EAAOC,iBAGzBC,OAAM,SAACC,GACNC,OAAOC,MAAMF,EAAIG,cAEpB,IAED,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,8CACe,+BAAOtB,OAEtB,8CACe,+BAAOE,aCvBfqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5947dd3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import ReactGA from 'react-ga'\nimport { useEffect, useState } from 'react'\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\n\nimport logo from './logo.svg'\nimport './App.css'\n\n// const TRACKING_ID = '252869480' // YOUR_OWN_TRACKING_ID\nReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID)\n\nfunction App() {\n  const [clientId, setClientId] = useState()\n  const [fingerprint, setFingerprint] = useState()\n  useEffect(() => {\n    ReactGA.ga(function (tracker) {\n      setClientId(tracker.get('clientId'))\n    })\n    FingerprintJS.load()\n      .then((fp) => {\n        return fp.get().then((result) => {\n          setFingerprint(result.visitorId)\n        })\n      })\n      .catch((err) => {\n        window.alert(err.message)\n      })\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          GA clientId: <code>{clientId}</code>\n        </p>\n        <p>\n          Fingerprint: <code>{fingerprint}</code>\n        </p>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}